<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Edward Zh</title>
    <description>一个普通的程序员 / 喜欢粤语歌
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 11 May 2017 15:35:16 +0800</pubDate>
    <lastBuildDate>Thu, 11 May 2017 15:35:16 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>面经 | 鹅厂2018届实习生招聘</title>
        <description>&lt;p&gt;距离上一篇博客已经过了6个月,虽然也没人看. 其实我是攒了点东西的, 然而博客配图真的难搞,所以就搁置了.&lt;/p&gt;

&lt;p&gt;虽然现在有无数的人鼓吹读书无用论,认为大学好坏不决定个人成长. 但是从这次鹅厂从简历投递到最后拿到offer的过程来看, &lt;strong&gt;大学的好坏真的很重要&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;2017-03-25&lt;/h3&gt;
&lt;p&gt;忽然听说腾讯的实习校招已经快要结束.由于当天事情比较多,直到26号才想着去看具体材料.然后惊喜的发现腾讯校招简历投递28号就要截止. 于是放下手头所有事情,从零开始写了篇简历.由于周边标定互联网公司的人少之又少,消息的匮乏使我在应聘实习生的过程中十分被动. 这也是大学水平直接决定的:&lt;strong&gt;信息获取速度&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;03-28 简历投递&lt;/h3&gt;
&lt;p&gt;进入&lt;a href=&quot;http://join.qq.com&quot;&gt;join.qq.com&lt;/a&gt;投递了简历之后,恍惚之间忘了有没有申请岗位,当我想起来的时候整个投递过程已经结束. 可以说是在惶恐中等待结果&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;04-02技术笔试&lt;/h3&gt;
&lt;p&gt;鹅厂技术笔试用的是第三方的考试平台,支持在线编程,在线debug. 全程必须开启摄像头,跳出页面达到一定次数判为作弊. 可以说在线上考试中已经算是严格的一类. 由于这篇面经是在一面结束后决定撰写,回忆起两周前的考试内容难免忘却. 印象中考试分为4块,分别为智力题, 基础题, 程序填空和编程题. 智力测验难度不高, 用基本的归纳思维可以解决大部分. 基础题中C++的覆盖范围较广,虚类虚方法的继承,构造方法的继承占了一块不小的比重. 可能鹅厂的cpp技术栈使其技术笔试的出题人认为移动客户端(iOS)的开发也需要对cpp有一定的了解.&lt;/p&gt;

&lt;p&gt;程序填空和编程题总体不难, 但是因为笔试时我正在南通旅游,笔试是在朋友家进行的, 完成的并不理想.&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;04-13 一面&lt;/h3&gt;
&lt;p&gt;笔试完成后感觉并不好,我也一度认为自己挂了. 于是正在准备阿里/携程/去哪儿/京东的简历投递. 直到收到面试通知.
&lt;img src=&quot;http://img.nufe-cst.cn/41494483917_.pic.jpg&quot; alt=&quot;收到这个短信的时候整个人一点准备都没有&quot; /&gt;
急吼吼的给第二天的课请假. 准备前往市区&lt;/p&gt;

&lt;p&gt;进入作为等待区的宴会厅. 第一步是扫码关注腾讯招聘并绑定简历进行签到. 不得不说腾讯人手一个账号的现实情况确实方便了不少. 直接登录qq就能把当时投递的简历和微信绑定在一起. 同时,面试结果等招聘后续反馈都会在公众号上提供查询功能,类似系统貌似可以实现一个玩玩. 现场有一个类似微信墙一样的叫号系统. 到时会有语音叫号提醒进入面试官房间. 同时,每个人的面试房间只通过手机短信和公众号信息的方式进行发送,现场语音叫号仅提示查看手机信息 .
&lt;img src=&quot;http://img.nufe-cst.cn/interview_wechat_snap&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第一次面试总体感觉不尽如人意. 一进去面试官问我有没有听说过OCS(OCScript, 腾讯自己的热修复框架). 老老实实回答没听说过,但是听说过JSPatch等. 出来后一查, 发现这个框架都还没开源= = 仅在手Q内部使用. 外网的文章只找得到16年7月的一篇→&lt;em&gt;→. 随后提了个用算法解决数独问题. 由于竞赛经验缺乏, 我是现场思考. 无意中实现了回溯法解决. 这也暴露了基础知识不足的缺陷. 随后就是进程线程区别, 进程通信的方式. 以及一道很简单的概率题(要求讲出求解过程). 事后旁敲侧击问了一下面试结果. 他说对我表现挺满意的,让我回去等通知→&lt;/em&gt;→. 然而截止现在(4.13 21:15),公众号上查出的结果还是初面,同去的其他人都查到了拒绝的状态.不知道是在最后挑选还是这就是初试通过的意思= =.&lt;/p&gt;

&lt;p&gt;腾讯的面试风格和阿里相差较大. 面试官并不询问简历上的具体项目, 而是问了一些非常基础的题目来考察根基. 这也许是因为cpp技术栈那崎岖的学习曲线吧. 总的来说,阿里巴巴的面试更加适合我这种实践性强,考试羸弱的选手. 然而鹅厂依旧是我的Dream Company.&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;04-14 总监面&lt;/h3&gt;
&lt;p&gt;昨天晚上接到通知次日11点面试.. 赞腾讯工作效率的同时, 开始蛋疼的修改第二天的安排.
&lt;img src=&quot;http://img.nufe-cst.cn/51494483917_.pic.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总监面试比想象中的轻松一些, 由于第一次面试不知道画风, 以为大公司技术面普遍偏向基础, 而一面二面的时间间隔让我没办法临时抱佛脚. 所以其实是抱着忐忑的心情进的面试官房间.&lt;/p&gt;

&lt;p&gt;总监面反而又画风不同, 先是问了一些特别基础的细节,比如字符串最后一位是什么,我答\0 他又问那你知不知道\1是什么. 老老实实答不知道.出来一查,发现是SOH(标题开始). 又问了一些数据库5范式,本来想硬着头皮背出来,结果他说只是想知道五范式的作用, 由于我之前的项目中并没有刻意的使用五范式进行数据库设计, 所以只能凭着经验回答可能提升数据的组织度,提高查找效率(在这里可能有存疑, 毕竟数据库越遵循范式查询越复杂). 随后要求用c语言或者伪码写一个词频分析器(输入单行的长串,各单词用空格分割,统计词频), c的字符串对比以及一些最基础的封装简直要了命(我还用错了&lt;code class=&quot;highlighter-rouge&quot;&gt;strcmp()&lt;/code&gt; ,认为&lt;code class=&quot;highlighter-rouge&quot;&gt;strcmp(str1,str2)!=0&lt;/code&gt; 才是真). 用最挫的方式写出来之后又要求加一个词频排序功能,因为自己不是背代码的人, 直接手写就写了个优化后的冒泡.这一关就算是过了. 在大约20分钟的基础题之后,面试官终于指着简历上的项目进行询问了, 由于之前博客没什么实质性的内容,Github上最近也只是有一个计划. 否则让面试官看博客其实是非常Exciting的一种表现自我的方式. 总监问了我最有成就感的项目是哪一个并做简单介绍. 这一部分问的很细.所以简历上尤其是项目经历不能造假,否则从业人员扫一眼问几句绝对清楚你有多少斤两.&lt;/p&gt;

&lt;p&gt;开始聊项目那就是我的主战场了, 和面试官谈笑风生,聊得很开心. 这一部分时长约40分钟,由于个人情况不同,我觉得没有必要写出来. 总之简历里的项目面试官一定会看并且问细节, 不要作假,年代久远的自己回去过一遍可能效果不错.&lt;/p&gt;

&lt;p&gt;最后面试官问我有没有问题, 经历一面之后非常心虚的我直接问了对今天的面试表现能否做一个评价, 结果总监说对我很满意!让我直接回去等HR面试通知. 于是我整个人都上天了, 出来后一直在给关心这次面试的朋友老师家人报喜, 下午2点到仙林后随便吃了点麦当劳新出的工作餐就回去等消息了.&lt;/p&gt;

&lt;h3 id=&quot;hr&quot;&gt;04-14 HR面&lt;/h3&gt;

&lt;p&gt;二面结束后到宿舍后其实整个人是放松的状态.在学生会的经验以及面经告诉我,这一面更多的是考验价值观以及对企业的了解,准备在床上休息一下晚上开始看相关的材料进行准备. 在17:10,刚准备下床开始看资料时,收到了HR面的通知. 初看通知是HR面,心里想的是到的这么快. 效率可以啊, 结果细看时间, 是当天晚上18:30. 打开高德一查路况,市里果然堵车了.(手动再见) 赶紧出门火急火燎坐地铁,出站后一路小跑,终于在18:20堪堪赶到作为等候区的宴会厅签到. 等候区寥寥数人,看起来像是几个等待技术面的学生, 前台工作人员在打王者荣耀→_→ 毕竟这个时间点已经没有新的人来签到了. 大约到了18:40,有工作人员过来统计了一下剩余的面试人数, 现场只有3个等待HR面的学生,于是负责人通知准备撤场.. 到了18:50左右,我去咨询了一下工作人员为什么面试还没开始, 他帮我在系统查了一下情况,告诉我现场3个人都是等这个HR面试的,我是最后一个,并惊讶于我早上面完总监晚上就HR,说我应该很棒.前两次面试经验告诉我有得等了,于是淡定地去前面取一瓶免费的矿泉水,插上充电宝开始刷知乎(我也不知道为什么不用这段时间做功课).
&lt;img src=&quot;http://img.nufe-cst.cn/61494483918_.pic.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;section-5&quot;&gt;20:00&lt;/h4&gt;

&lt;p&gt;终于在微信上收到了去面试官房间的通知,HR是一个漂亮的小姐姐,之前朋友开玩笑说要言简意赅因为HR没吃饭hhh,然而我这个嘴碎的人还是和他聊了一个小时才结束HR面试流程.&lt;/p&gt;

&lt;p&gt;HR面试和技术面有很多不同, HR支了一张独立的桌子,和面试人面对面而坐,方便他观察面试人的表现. 同时如我看过的仅有的2篇面经,让我自我介绍. 本身不喜欢自夸(不同于平时扯淡)的我简单的介绍了一下学校学院专业以及学生会任职情况和项目经历之后,就开始问籍贯是否独生子女以及情感状态. 还问我和女朋友计划不同岂不是要准备异地恋等有点尴尬的问题.&lt;/p&gt;

&lt;p&gt;奇怪的是,一个技术的面试居然要问如何帮老师订机票排行程,得亏在学生会待过同时经常出去玩. 掰掰扯扯讲了8个点, 他又开始问一根筷子的10个用途(扶额). 智力题(姑且认为是智力题吧)结束后就开始问我企业文化, 刹那间我开始后悔为什么等待的时候没有看一点材料. 我连8个BG都背不全,居然开始问我腾讯的6大平台. 见我答不出来就让我举出腾讯的10个产品. 随后就着简历开始问项目的设计思路,因为我怕他听不懂,在碰到一些技术名词的时候稍加了一点解释,HR问我是不是怕她听不懂,我说是. 他说没事按自己思路说. 从这一点我判断hr面问项目可能只是想确认这个项目是自己做的,也就确认真的说得出来. 大概聊了两三个项目之后,hr开始询问成绩等在校情况,如实回答并且解释了一下有几门课挂掉的原因.&lt;/p&gt;

&lt;p&gt;随后便是老生常谈的提问环节, 由于HR都是专业的面试官, 我也非常清楚他不会透露面试结果. 于是我换了个问法,以一个HR来看,我这次面试有什么需要改进的地方. HR果然都是人精, 他说这次面试很好,但是由于职业要求他不会明确的告诉我结果, 改进的话在面试前还是要做好企业文化相关的功课,这样也显得尊重对方公司. 同时告诉我复试面试官给我的评价不错. 之后复试(也就是额外的一轮面试)的可能性不大, 等待通知就行了.&lt;/p&gt;

&lt;p&gt;第二个问题是为什么今天通知时间这么赶(再一次作死) hr先是道了歉,然后说因为有几个人的结果变更提交的特别早,他想和这几个人多聊一会,毕竟到了周六周日就是hr面扎堆,了解的时间不够.(开心),愉快地道别之后出酒店已经是晚上9点了, 在水游城吃了一顿55的香锅(死贵!)便坐地铁赶回了学校.&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;04-18 状态变更&lt;/h3&gt;

&lt;p&gt;上周五面试完后,微信查询状态一直是HR面试中, 期间经历了大部分大厂校招人的焦虑情绪. 大约半小时查一次状态,写项目的时候趁着编译也要查一下. 等待的这四天朋友圈画风迥异, 整个人都有点烦躁.. 在4.18上午南京场已经逐步有几个人状态变为已完成所有面试,因为有小道消息说这次进入HR面的人特别多,可能要对半刷人, 整个人焦虑不堪,等到下午上课终于自己的状态也变了. 大石头算是落了地,毕竟面试进行到这一步,有没有offer就看公司对我的需求了.&lt;/p&gt;

&lt;h3 id=&quot;offer&quot;&gt;04-24 OFFER!&lt;/h3&gt;

&lt;p&gt;早上开始面试群里就有武汉面试的SNG的同学收到了offer电话. 说不紧张那是假的. 全天手机不敢静音,包括开会. 过去一整周完全没有产出. 到了下午,开会的时候终于接到一个广东的电话.在确认基本信息以及待遇(鹅厂高压线,不可言)后. 大约过了半小时,就收到了offer邮件.&lt;/p&gt;

&lt;h3 id=&quot;offer-1&quot;&gt;Offer后续流程&lt;/h3&gt;

&lt;p&gt;Offer邮件中附带了录用函,健康承诺书以及实习生入职指南.按要求打印填写并签字录用函以及健康承诺书后,大约过了一天就收到了入职信息调查的短信以及邮件.
&lt;img src=&quot;http://img.nufe-cst.cn/71494483919_.pic.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在实习生群里看到有些同学早已入职,学校的日子变得索然无味(本来就是). 奈何有项目拖累无法提前赶赴深圳. 期待.&lt;/p&gt;

&lt;h2 id=&quot;one-more-thing&quot;&gt;One More Thing&lt;/h2&gt;

&lt;p&gt;昨晚看到&lt;a href=&quot;http://blog.ijason.cc&quot;&gt;Jason的博客&lt;/a&gt;有这么一句话
&lt;img src=&quot;http://img.nufe-cst.cn/WX20170511-150715@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;想到大一时懵懵懂懂也想着鹅厂,一直到后面不停的项目学了很多有的没的,现在算是半个全栈. 发现这几年在某种程度上讲确实挺寂寞的. 鹅厂,或者说一二线互联网企业的氛围可能能够提供更多「圈内」的朋友吧.至少这几天在实习生群中,抛出任何一个梗都有人接的感觉. 真好&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://img.nufe-cst.cn/interview_img_wechat_snap&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 11 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/TencentInterview/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/TencentInterview/</guid>
        
        <category>瞎逼逼</category>
        
        
      </item>
    
      <item>
        <title>不务正业 | 文档生成工具apiDoc</title>
        <description>&lt;p&gt;本来应该是在研究webrtc的,但是混蛋项目前负责人给我甩了个美国的ftp让我去扒代码,来来来感受一下这个速度
&lt;img src=&quot;http://img.nufe-cst.cn/ab2b1c6c1d51.png&quot; alt=&quot;downloadSnap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;于是在扒代码的同时,着手开工写手头另一个项目的文档,之前的api都是用md手写的,后来随着项目越发复杂,这个方式不再高效,于是着手调研了一番自动文档生成工具.&lt;/p&gt;

&lt;p&gt;进入我视野并且试用过的有2种&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://swagger.io/&quot;&gt;swagger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://apidocjs.com&quot;&gt;apiDoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先说&lt;a href=&quot;http://swagger.io/&quot;&gt;swagger&lt;/a&gt;,它利用java注解来实现文档的自动生成,只要项目部署到服务器上,访问对应url就能直接看到项目文档.我不选择这个工具的原因是:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;直接把文档作为代码的一部分放入工程,随着项目日渐庞大势必增加编译时间和编译结果尺寸.&lt;/li&gt;
  &lt;li&gt;文档内容并不随时跟着接口改变,相当于同时维护两份代码,如何保持一致性是一个难以解决的问题.&lt;/li&gt;
  &lt;li&gt;嵌入代码相当于在生产环境也要占用一部分资源进行文档的存储渲染,浪费资源.虽然可以通过条件编译解决这个问题,但是我懒:)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;再讲&lt;a href=&quot;http://apidocjs.com&quot;&gt;apiDoc&lt;/a&gt;,apiDoc采用注释方式来解决文档生成问题,一个常见的文档是这样的&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**
 *
 * @api {get} /bird/:speciesId birdById
 * @apiName birdById
 * @apiGroup bird
 * @apiVersion 0.1.0
 * @apiDescription 关键词查找 可用拉丁名 英文名 中文名查找鸟种
 * @apiPermission anyone
 * @apiParam :speciesId 鸟种id
 * @apiParamExample {json} Request Example
 *    GET /bird/:speciesId
 *
 * @apiSuccess {String} code 88
 * @apiSuccess {String} message ok
 * @apiSuccess {Object} data ok
 * @apiSuccess {String} data.englishName
 * @apiSuccess {String} data.familia 科
 * @apiSuccess {String} data.genus 属
 * @apiSuccess {int} data.id 鸟种id
 * @apiSuccess {String} data.latinName
 * @apiSuccess {String} data.localName
 * @apiSuccess {String} data.order 目
 * @apiSuccess {String} data.shape 体型大小
 * @apiSuccessExample Success-Response:
 *  HTTP/1.1 200 OK
 *{
 *    &quot;code&quot;: 88,
 *    &quot;data&quot;: [
 *        {
 *            &quot;englishName&quot;: &quot;Snow Partridge&quot;,
 *            &quot;familia&quot;: &quot;雉科&quot;,
 *            &quot;genus&quot;: &quot;雪鹑属&quot;,
 *            &quot;id&quot;: 1,
 *            &quot;latinName&quot;: &quot;Lerwa lerwa&quot;,
 *            &quot;localName&quot;: &quot;雪鹑&quot;,
 *            &quot;order&quot;: &quot;鸡形目&quot;,
 *            &quot;shape&quot;: &quot;斑鸠与鸬鹚之间&quot;
 *        }
 *    ],
 *    &quot;message&quot;: &quot;ok&quot;
 *}
 */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;apiDoc的优势在于:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;作为注释存在于源文件,修改接口的同时直接修改文档,不存在同时操作两份文件的问题.同时,编译时直接忽略注释,对后续的业务流程没有影响.&lt;/li&gt;
  &lt;li&gt;文档内容并不随时跟着接口改变这个问题虽然还是没有解决,但是相比于其他优势,这个就当妥协了吧.&lt;/li&gt;
  &lt;li&gt;除了代码本身,不占用任何资源&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;apiDoc基于node.js,所以我们需要一个npm,还没有的同学自己百度怎么下载&lt;/p&gt;

&lt;p&gt;在shell执行&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm install apidoc -g&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;由于国内网络问题,这个步骤可能需要等待比较长的时间.&lt;/p&gt;

&lt;p&gt;在项目根目录创建apidoc.json(如果是node.js项目,可以直接在package.json中加入apiDoc的配置项),常见的配置为&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;example&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A basic apiDoc example&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在代码中使用注释编写文档(各种语言的注释格式可见&lt;a href=&quot;http://apidocjs.com&quot;&gt;apiDoc&lt;/a&gt;,此处以Java为例),具体语法见&lt;a href=&quot;http://apidocjs.com/#params&quot;&gt;这里&lt;/a&gt;,&lt;a href=&quot;http://blog.csdn.net/soslinken/article/details/50468896&quot;&gt;中文版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;编写完后,在shell执行&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;apidoc -i ./ -o ./doc/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此处参数意义为:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-i [inputPath]&lt;/li&gt;
  &lt;li&gt;-o [outputPath]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此时就可以在根目录/doc文件夹看到生成的文档了,打开index.html,就能看到所有的api以group-name的方式升序排列.可以编写脚本直接上传到服务端.&lt;/p&gt;

&lt;p&gt;附一个文档生成结果:&lt;a href=&quot;http://api.ebirdnote.cn/doc&quot;&gt;api.ebirdnote.cn/doc&lt;/a&gt;,这就是通过默认模板生成的RESTful api document,其实apidoc内置了调试器,但是在post请求中无法使用json作为body编码方式,我暂时也没时间解决这个问题,有解决方案的同学欢迎给我发一个链接到&lt;a href=&quot;mailto:i@edzh.me&quot;&gt;我的邮箱&lt;/a&gt;,感激不尽&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/apiDoc/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/apiDoc/</guid>
        
        <category>coding</category>
        
        
      </item>
    
      <item>
        <title>Hello world!</title>
        <description>&lt;p&gt;一直觉得开博客是一个很矫情的事情,而且我的文笔仅在写正经文章的时候有那种词汇跟着思维蹦出来的感觉.(是的我也感觉非常weird)我感觉还是有必要把这个博客的创建原因,以及大概的内容做一个综述,也算是我当了这几年学生干部的一个能力的回馈吧…(&lt;em&gt;遇事喜欢搞文档&lt;/em&gt;)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;为什么开&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;促成我开这个博客的原因.一个是感觉从初二开始涉足程序员的领域,从vb6一直到现在iOS / Java双修,作品出了很多个,然而没什么东西沉淀下来,基本都在脑子里藏着.没留下什么文档,踩过的坑也只有自己知道.不符合现在愈演愈烈的开源趋势.所以,虽然本人水平并不高,但是对初学者还是有点东西可讲的.也算是给圈子做点微小的贡献.另外呢,前阵子统计了一下几个社交平台的流量,微博也发了1.8k条,基本弃用的QQ空间也有大约4.1k条状态.朋友圈数字未知,但是肯定有500条以上.感觉社交平台的140字有时候并不足以记录生活,所以权当是日记来写,如果有幸有陌生人关注这个博客,我也非常乐意分享我的生活.最后也是因为终于申请到了&lt;a href=&quot;https://github.com&quot; title=&quot;Github&quot;&gt;Github&lt;/a&gt;的&lt;a href=&quot;http://education.github.com&quot; title=&quot;Education Pack&quot;&gt;Education Pack&lt;/a&gt;,也弄到了满意的个人域名&lt;a href=&quot;http://edzh.me&quot; title=&quot;edzh.me&quot;&gt;edzh.me&lt;/a&gt;(我的全名是Edward Zhou),也算是有机会能够过上我见过的大部分程序员的生活了&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;要写什么&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个博客不仅仅是技术博客,有时候也会发点生活吐槽,我也会尽量写的陌生人也知道发生了什么.就当是锻炼文笔了吧.技术上,我会把当前手头项目所有踩过的坑,以及仅仅通过百度无法达成的需求的解决方案发上来,这也是很多陌生人可能访问这个博客的原因.
&lt;br /&gt;
此外,就像首页的标签”&lt;strong&gt;好奇心 | 码代码 | 按快门 | 穷 | Apple | 软狗 | +1s&lt;/strong&gt;“,这就是我.有什么有意思的小玩意儿我都会共享上来.有兴趣的可以持续关注.想交流的可以发邮件到&lt;a href=&quot;mailto:i@edzh.me&quot; title=&quot;联系我&quot;&gt;i@edzh.me&lt;/a&gt;,本来这个模板是有评论功能的,我关了.&lt;/p&gt;

</description>
        <pubDate>Fri, 28 Oct 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/10/Foreword/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/Foreword/</guid>
        
        <category>瞎逼逼</category>
        
        
      </item>
    
  </channel>
</rss>
